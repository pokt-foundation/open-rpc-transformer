{
    "openapi": "3.0.0",
    "info": {
      "title": "Ethereum JSON-RPC Specification",
      "description": "A specification of the standard interface for Ethereum clients.",
      "license": {
        "name": "CC0-1.0",
        "url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
      },
      "version": "0.0.0"
    },
    "components": {},
    "paths": {
      "/eth_getBlockByHash": {
        "post": {
          "summary": "Returns information about a block by hash.",
          "operationId": "eth_getBlockByHash",
          "responses": {
            "200": {
              "description": "Block information",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Block object",
                    "type": "object",
                    "required": [
                      "parentHash",
                      "sha3Uncles",
                      "miner",
                      "stateRoot",
                      "transactionsRoot",
                      "receiptsRoot",
                      "logsBloom",
                      "number",
                      "gasLimit",
                      "gasUsed",
                      "timestamp",
                      "extraData",
                      "mixHash",
                      "nonce",
                      "size",
                      "transactions",
                      "uncles"
                    ],
                    "properties": {
                      "parentHash": {
                        "title": "Parent block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "sha3Uncles": {
                        "title": "Ommers hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "miner": {
                        "title": "Coinbase",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "stateRoot": {
                        "title": "State root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "transactionsRoot": {
                        "title": "Transactions root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "receiptsRoot": {
                        "title": "Receipts root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "logsBloom": {
                        "title": "Bloom filter",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{512}$"
                      },
                      "difficulty": {
                        "title": "Difficulty",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "number": {
                        "title": "Number",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "gasLimit": {
                        "title": "Gas limit",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "gasUsed": {
                        "title": "Gas used",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "timestamp": {
                        "title": "Timestamp",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "extraData": {
                        "title": "Extra data",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "mixHash": {
                        "title": "Mix hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "nonce": {
                        "title": "Nonce",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{16}$"
                      },
                      "totalDifficulty": {
                        "title": "Total difficult",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "baseFeePerGas": {
                        "title": "Base fee per gas",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "size": {
                        "title": "Block size",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "transactions": {
                        "anyOf": [
                          {
                            "title": "Transaction hashes",
                            "type": "array",
                            "items": {
                              "title": "32 byte hex value",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          },
                          {
                            "title": "Full transactions",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "Signed 1559 Transaction",
                                  "type": "object",
                                  "required": [
                                    "accessList",
                                    "chainId",
                                    "gas",
                                    "input",
                                    "maxFeePerGas",
                                    "maxPriorityFeePerGas",
                                    "nonce",
                                    "r",
                                    "s",
                                    "type",
                                    "value",
                                    "yParity"
                                  ],
                                  "properties": {
                                    "type": {
                                      "title": "type",
                                      "type": "string",
                                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                    },
                                    "nonce": {
                                      "title": "nonce",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "to": {
                                      "title": "to address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "gas": {
                                      "title": "gas limit",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "value": {
                                      "title": "value",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "input": {
                                      "title": "input data",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "maxPriorityFeePerGas": {
                                      "title": "max priority fee per gas",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                                    },
                                    "maxFeePerGas": {
                                      "title": "max fee per gas",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                                    },
                                    "accessList": {
                                      "title": "accessList",
                                      "type": "array",
                                      "description": "EIP-2930 access list",
                                      "items": {
                                        "title": "Access list entry",
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                          },
                                          "storageKeys": {
                                            "type": "array",
                                            "items": {
                                              "title": "32 byte hex value",
                                              "type": "string",
                                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "chainId": {
                                      "title": "chainId",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Chain ID that this transaction is valid on."
                                    },
                                    "yParity": {
                                      "title": "yParity",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                    },
                                    "r": {
                                      "title": "r",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "s": {
                                      "title": "s",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    }
                                  }
                                },
                                {
                                  "title": "Signed 2930 Transaction",
                                  "type": "object",
                                  "required": [
                                    "accessList",
                                    "chainId",
                                    "gas",
                                    "gasPrice",
                                    "input",
                                    "nonce",
                                    "r",
                                    "s",
                                    "type",
                                    "value",
                                    "yParity"
                                  ],
                                  "properties": {
                                    "type": {
                                      "title": "type",
                                      "type": "string",
                                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                    },
                                    "nonce": {
                                      "title": "nonce",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "to": {
                                      "title": "to address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "gas": {
                                      "title": "gas limit",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "value": {
                                      "title": "value",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "input": {
                                      "title": "input data",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "gasPrice": {
                                      "title": "gas price",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The gas price willing to be paid by the sender in wei"
                                    },
                                    "accessList": {
                                      "title": "accessList",
                                      "type": "array",
                                      "description": "EIP-2930 access list",
                                      "items": {
                                        "title": "Access list entry",
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                          },
                                          "storageKeys": {
                                            "type": "array",
                                            "items": {
                                              "title": "32 byte hex value",
                                              "type": "string",
                                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "chainId": {
                                      "title": "chainId",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Chain ID that this transaction is valid on."
                                    },
                                    "yParity": {
                                      "title": "yParity",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                    },
                                    "r": {
                                      "title": "r",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "s": {
                                      "title": "s",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    }
                                  }
                                },
                                {
                                  "title": "Signed Legacy Transaction",
                                  "type": "object",
                                  "required": [
                                    "gas",
                                    "gasPrice",
                                    "input",
                                    "nonce",
                                    "r",
                                    "s",
                                    "type",
                                    "v",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "title": "type",
                                      "type": "string",
                                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                    },
                                    "nonce": {
                                      "title": "nonce",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "to": {
                                      "title": "to address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "gas": {
                                      "title": "gas limit",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "value": {
                                      "title": "value",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "input": {
                                      "title": "input data",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "gasPrice": {
                                      "title": "gas price",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The gas price willing to be paid by the sender in wei"
                                    },
                                    "chainId": {
                                      "title": "chainId",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Chain ID that this transaction is valid on."
                                    },
                                    "v": {
                                      "title": "v",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "r": {
                                      "title": "r",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "s": {
                                      "title": "s",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "uncles": {
                        "title": "Uncles",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 byte hex value",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns information about a block by hash.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block hash"
          }
        }
      },
      "/eth_getBlockByNumber": {
        "post": {
          "summary": "Returns information about a block by number.",
          "operationId": "eth_getBlockByNumber",
          "responses": {
            "200": {
              "description": "Block information",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Block object",
                    "type": "object",
                    "required": [
                      "parentHash",
                      "sha3Uncles",
                      "miner",
                      "stateRoot",
                      "transactionsRoot",
                      "receiptsRoot",
                      "logsBloom",
                      "number",
                      "gasLimit",
                      "gasUsed",
                      "timestamp",
                      "extraData",
                      "mixHash",
                      "nonce",
                      "size",
                      "transactions",
                      "uncles"
                    ],
                    "properties": {
                      "parentHash": {
                        "title": "Parent block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "sha3Uncles": {
                        "title": "Ommers hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "miner": {
                        "title": "Coinbase",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "stateRoot": {
                        "title": "State root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "transactionsRoot": {
                        "title": "Transactions root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "receiptsRoot": {
                        "title": "Receipts root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "logsBloom": {
                        "title": "Bloom filter",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{512}$"
                      },
                      "difficulty": {
                        "title": "Difficulty",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "number": {
                        "title": "Number",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "gasLimit": {
                        "title": "Gas limit",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "gasUsed": {
                        "title": "Gas used",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "timestamp": {
                        "title": "Timestamp",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "extraData": {
                        "title": "Extra data",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "mixHash": {
                        "title": "Mix hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "nonce": {
                        "title": "Nonce",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{16}$"
                      },
                      "totalDifficulty": {
                        "title": "Total difficult",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "baseFeePerGas": {
                        "title": "Base fee per gas",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "size": {
                        "title": "Block size",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "transactions": {
                        "anyOf": [
                          {
                            "title": "Transaction hashes",
                            "type": "array",
                            "items": {
                              "title": "32 byte hex value",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          },
                          {
                            "title": "Full transactions",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "title": "Signed 1559 Transaction",
                                  "type": "object",
                                  "required": [
                                    "accessList",
                                    "chainId",
                                    "gas",
                                    "input",
                                    "maxFeePerGas",
                                    "maxPriorityFeePerGas",
                                    "nonce",
                                    "r",
                                    "s",
                                    "type",
                                    "value",
                                    "yParity"
                                  ],
                                  "properties": {
                                    "type": {
                                      "title": "type",
                                      "type": "string",
                                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                    },
                                    "nonce": {
                                      "title": "nonce",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "to": {
                                      "title": "to address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "gas": {
                                      "title": "gas limit",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "value": {
                                      "title": "value",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "input": {
                                      "title": "input data",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "maxPriorityFeePerGas": {
                                      "title": "max priority fee per gas",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                                    },
                                    "maxFeePerGas": {
                                      "title": "max fee per gas",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                                    },
                                    "accessList": {
                                      "title": "accessList",
                                      "type": "array",
                                      "description": "EIP-2930 access list",
                                      "items": {
                                        "title": "Access list entry",
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                          },
                                          "storageKeys": {
                                            "type": "array",
                                            "items": {
                                              "title": "32 byte hex value",
                                              "type": "string",
                                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "chainId": {
                                      "title": "chainId",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Chain ID that this transaction is valid on."
                                    },
                                    "yParity": {
                                      "title": "yParity",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                    },
                                    "r": {
                                      "title": "r",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "s": {
                                      "title": "s",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    }
                                  }
                                },
                                {
                                  "title": "Signed 2930 Transaction",
                                  "type": "object",
                                  "required": [
                                    "accessList",
                                    "chainId",
                                    "gas",
                                    "gasPrice",
                                    "input",
                                    "nonce",
                                    "r",
                                    "s",
                                    "type",
                                    "value",
                                    "yParity"
                                  ],
                                  "properties": {
                                    "type": {
                                      "title": "type",
                                      "type": "string",
                                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                    },
                                    "nonce": {
                                      "title": "nonce",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "to": {
                                      "title": "to address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "gas": {
                                      "title": "gas limit",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "value": {
                                      "title": "value",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "input": {
                                      "title": "input data",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "gasPrice": {
                                      "title": "gas price",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The gas price willing to be paid by the sender in wei"
                                    },
                                    "accessList": {
                                      "title": "accessList",
                                      "type": "array",
                                      "description": "EIP-2930 access list",
                                      "items": {
                                        "title": "Access list entry",
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                          },
                                          "storageKeys": {
                                            "type": "array",
                                            "items": {
                                              "title": "32 byte hex value",
                                              "type": "string",
                                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "chainId": {
                                      "title": "chainId",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Chain ID that this transaction is valid on."
                                    },
                                    "yParity": {
                                      "title": "yParity",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                                    },
                                    "r": {
                                      "title": "r",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "s": {
                                      "title": "s",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    }
                                  }
                                },
                                {
                                  "title": "Signed Legacy Transaction",
                                  "type": "object",
                                  "required": [
                                    "gas",
                                    "gasPrice",
                                    "input",
                                    "nonce",
                                    "r",
                                    "s",
                                    "type",
                                    "v",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "title": "type",
                                      "type": "string",
                                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                                    },
                                    "nonce": {
                                      "title": "nonce",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "to": {
                                      "title": "to address",
                                      "type": "string",
                                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                    },
                                    "gas": {
                                      "title": "gas limit",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "value": {
                                      "title": "value",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "input": {
                                      "title": "input data",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "gasPrice": {
                                      "title": "gas price",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "The gas price willing to be paid by the sender in wei"
                                    },
                                    "chainId": {
                                      "title": "chainId",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                      "description": "Chain ID that this transaction is valid on."
                                    },
                                    "v": {
                                      "title": "v",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "r": {
                                      "title": "r",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "s": {
                                      "title": "s",
                                      "type": "string",
                                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "uncles": {
                        "title": "Uncles",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "Block number or tag",
                  "oneOf": [
                    {
                      "title": "Block number",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    {
                      "title": "Block tag",
                      "type": "string",
                      "enum": [
                        "earliest",
                        "finalized",
                        "safe",
                        "latest",
                        "pending"
                      ],
                      "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                    }
                  ]
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns information about a block by number.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block"
          }
        }
      },
      "/eth_getBlockTransactionCountByHash": {
        "post": {
          "summary": "Returns the number of transactions in a block from a block matching the given block hash.",
          "operationId": "eth_getBlockTransactionCountByHash",
          "responses": {
            "200": {
              "description": "Transaction count",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 byte hex value",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of transactions in a block from a block matching the given block hash.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block hash"
          }
        }
      },
      "/eth_getBlockTransactionCountByNumber": {
        "post": {
          "summary": "Returns the number of transactions in a block matching the given block number.",
          "operationId": "eth_getBlockTransactionCountByNumber",
          "responses": {
            "200": {
              "description": "Transaction count",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "Block number or tag",
                  "oneOf": [
                    {
                      "title": "Block number",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    {
                      "title": "Block tag",
                      "type": "string",
                      "enum": [
                        "earliest",
                        "finalized",
                        "safe",
                        "latest",
                        "pending"
                      ],
                      "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                    }
                  ]
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of transactions in a block matching the given block number.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block"
          }
        }
      },
      "/eth_getUncleCountByBlockHash": {
        "post": {
          "summary": "Returns the number of uncles in a block from a block matching the given block hash.",
          "operationId": "eth_getUncleCountByBlockHash",
          "responses": {
            "200": {
              "description": "Uncle count",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 byte hex value",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of uncles in a block from a block matching the given block hash.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block hash"
          }
        }
      },
      "/eth_getUncleCountByBlockNumber": {
        "post": {
          "summary": "Returns the number of transactions in a block matching the given block number.",
          "operationId": "eth_getUncleCountByBlockNumber",
          "responses": {
            "200": {
              "description": "Uncle count",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "Block number or tag",
                  "oneOf": [
                    {
                      "title": "Block number",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    {
                      "title": "Block tag",
                      "type": "string",
                      "enum": [
                        "earliest",
                        "finalized",
                        "safe",
                        "latest",
                        "pending"
                      ],
                      "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                    }
                  ]
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of transactions in a block matching the given block number.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block"
          }
        }
      },
      "/eth_chainId": {
        "post": {
          "summary": "Returns the chain ID of the current network.",
          "operationId": "eth_chainId",
          "responses": {
            "200": {
              "description": "Chain ID",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the chain ID of the current network.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_syncing": {
        "post": {
          "summary": "Returns an object with data about the sync status or false.",
          "operationId": "eth_syncing",
          "responses": {
            "200": {
              "description": "Syncing status",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Syncing status",
                    "oneOf": [
                      {
                        "title": "Syncing progress",
                        "type": "object",
                        "properties": {
                          "startingBlock": {
                            "title": "Starting block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "currentBlock": {
                            "title": "Current block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "highestBlock": {
                            "title": "Highest block",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Not syncing",
                        "description": "Should always return false if not syncing.",
                        "type": "boolean"
                      }
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns an object with data about the sync status or false.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_coinbase": {
        "post": {
          "summary": "Returns the client coinbase address.",
          "operationId": "eth_coinbase",
          "responses": {
            "200": {
              "description": "Coinbase address",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded address",
                    "type": "string",
                    "pattern": "^0x[0-9,a-f,A-F]{40}$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the client coinbase address.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_accounts": {
        "post": {
          "summary": "Returns a list of addresses owned by client.",
          "operationId": "eth_accounts",
          "responses": {
            "200": {
              "description": "Accounts",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Accounts",
                    "type": "array",
                    "items": {
                      "title": "hex encoded address",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns a list of addresses owned by client.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_blockNumber": {
        "post": {
          "summary": "Returns the number of most recent block.",
          "operationId": "eth_blockNumber",
          "responses": {
            "200": {
              "description": "Block number",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of most recent block.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_call": {
        "post": {
          "summary": "Executes a new message call immediately without creating a transaction on the block chain.",
          "operationId": "eth_call",
          "responses": {
            "200": {
              "description": "Return data",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Transaction object generic to all types",
                  "properties": {
                    "type": {
                      "title": "type",
                      "type": "string",
                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                    },
                    "nonce": {
                      "title": "nonce",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "to": {
                      "title": "to address",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    },
                    "gas": {
                      "title": "gas limit",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "value": {
                      "title": "value",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "input": {
                      "title": "input data",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    },
                    "gasPrice": {
                      "title": "gas price",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "The gas price willing to be paid by the sender in wei"
                    },
                    "maxPriorityFeePerGas": {
                      "title": "max priority fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                    },
                    "maxFeePerGas": {
                      "title": "max fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                    },
                    "accessList": {
                      "title": "accessList",
                      "type": "array",
                      "description": "EIP-2930 access list",
                      "items": {
                        "title": "Access list entry",
                        "type": "object",
                        "properties": {
                          "address": {
                            "title": "hex encoded address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "storageKeys": {
                            "type": "array",
                            "items": {
                              "title": "32 byte hex value",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          }
                        }
                      }
                    },
                    "chainId": {
                      "title": "chainId",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "Chain ID that this transaction is valid on."
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Executes a new message call immediately without creating a transaction on the block chain.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction"
          }
        }
      },
      "/eth_estimateGas": {
        "post": {
          "summary": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
          "operationId": "eth_estimateGas",
          "responses": {
            "200": {
              "description": "Gas used",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Transaction object generic to all types",
                  "properties": {
                    "type": {
                      "title": "type",
                      "type": "string",
                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                    },
                    "nonce": {
                      "title": "nonce",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "to": {
                      "title": "to address",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    },
                    "gas": {
                      "title": "gas limit",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "value": {
                      "title": "value",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "input": {
                      "title": "input data",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    },
                    "gasPrice": {
                      "title": "gas price",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "The gas price willing to be paid by the sender in wei"
                    },
                    "maxPriorityFeePerGas": {
                      "title": "max priority fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                    },
                    "maxFeePerGas": {
                      "title": "max fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                    },
                    "accessList": {
                      "title": "accessList",
                      "type": "array",
                      "description": "EIP-2930 access list",
                      "items": {
                        "title": "Access list entry",
                        "type": "object",
                        "properties": {
                          "address": {
                            "title": "hex encoded address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "storageKeys": {
                            "type": "array",
                            "items": {
                              "title": "32 byte hex value",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          }
                        }
                      }
                    },
                    "chainId": {
                      "title": "chainId",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "Chain ID that this transaction is valid on."
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction"
          }
        }
      },
      "/eth_createAccessList": {
        "post": {
          "summary": "Generates an access list for a transaction.",
          "operationId": "eth_createAccessList",
          "responses": {
            "200": {
              "description": "Gas used",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Access list result",
                    "type": "object",
                    "properties": {
                      "accessList": {
                        "title": "accessList",
                        "type": "array",
                        "items": {
                          "title": "Access list entry",
                          "type": "object",
                          "properties": {
                            "address": {
                              "title": "hex encoded address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "storageKeys": {
                              "type": "array",
                              "items": {
                                "title": "32 byte hex value",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            }
                          }
                        }
                      },
                      "error": {
                        "title": "error",
                        "type": "string"
                      },
                      "gasUsed": {
                        "title": "Gas used",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Transaction object generic to all types",
                  "properties": {
                    "type": {
                      "title": "type",
                      "type": "string",
                      "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                    },
                    "nonce": {
                      "title": "nonce",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "to": {
                      "title": "to address",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    },
                    "gas": {
                      "title": "gas limit",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "value": {
                      "title": "value",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "input": {
                      "title": "input data",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]*$"
                    },
                    "gasPrice": {
                      "title": "gas price",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "The gas price willing to be paid by the sender in wei"
                    },
                    "maxPriorityFeePerGas": {
                      "title": "max priority fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                    },
                    "maxFeePerGas": {
                      "title": "max fee per gas",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                    },
                    "accessList": {
                      "title": "accessList",
                      "type": "array",
                      "description": "EIP-2930 access list",
                      "items": {
                        "title": "Access list entry",
                        "type": "object",
                        "properties": {
                          "address": {
                            "title": "hex encoded address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "storageKeys": {
                            "type": "array",
                            "items": {
                              "title": "32 byte hex value",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          }
                        }
                      }
                    },
                    "chainId": {
                      "title": "chainId",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                      "description": "Chain ID that this transaction is valid on."
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Generates an access list for a transaction.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction"
          }
        }
      },
      "/eth_gasPrice": {
        "post": {
          "summary": "Returns the current price per gas in wei.",
          "operationId": "eth_gasPrice",
          "responses": {
            "200": {
              "description": "Gas price",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Gas price",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the current price per gas in wei.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_maxPriorityFeePerGas": {
        "post": {
          "summary": "Returns the current maxPriorityFeePerGas per gas in wei.",
          "operationId": "eth_maxPriorityFeePerGas",
          "responses": {
            "200": {
              "description": "Max priority fee per gas",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Max priority fee per gas",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the current maxPriorityFeePerGas per gas in wei.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_feeHistory": {
        "post": {
          "summary": "Transaction fee history",
          "operationId": "eth_feeHistory",
          "responses": {
            "200": {
              "description": "feeHistoryResult",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "feeHistoryResults",
                    "description": "Fee history results.",
                    "type": "object",
                    "required": [
                      "oldestBlock",
                      "baseFeePerGas",
                      "gasUsedRatio"
                    ],
                    "properties": {
                      "oldestBlock": {
                        "title": "oldestBlock",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                        "description": "Lowest number block of returned range."
                      },
                      "baseFeePerGas": {
                        "title": "baseFeePerGasArray",
                        "description": "An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.",
                        "type": "array",
                        "items": {
                          "title": "hex encoded unsigned integer",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                      },
                      "reward": {
                        "title": "rewardArray",
                        "description": "A two-dimensional array of effective priority fees per gas at the requested block percentiles.",
                        "type": "array",
                        "items": {
                          "title": "rewardPercentile",
                          "description": "An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",
                          "type": "array",
                          "items": {
                            "title": "rewardPercentile",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded unsigned integer",
                  "type": "string",
                  "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Transaction fee history",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "blockCount"
          }
        }
      },
      "/eth_newFilter": {
        "post": {
          "summary": "Creates a filter object, based on filter options, to notify when the state changes (logs).",
          "operationId": "eth_newFilter",
          "responses": {
            "200": {
              "description": "Filter Identifier",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "fromBlock": {
                      "title": "from block",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "toBlock": {
                      "title": "to block",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "address": {
                      "title": "Address(es)",
                      "oneOf": [
                        {
                          "title": "Address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        {
                          "title": "Addresses",
                          "type": "array",
                          "items": {
                            "title": "hex encoded address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          }
                        }
                      ]
                    },
                    "topics": {
                      "title": "Topics",
                      "type": "array",
                      "items": {
                        "title": "Filter Topic List Entry",
                        "oneOf": [
                          {
                            "title": "Single Topic Match",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          },
                          {
                            "title": "Multiple Topic Match",
                            "type": "array",
                            "items": {
                              "title": "32 hex encoded bytes",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Creates a filter object, based on filter options, to notify when the state changes (logs).",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Filter"
          }
        }
      },
      "/eth_newBlockFilter": {
        "post": {
          "summary": "Creates a filter in the node, to notify when a new block arrives.",
          "operationId": "eth_newBlockFilter",
          "responses": {
            "200": {
              "description": "Filter Identifier",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Creates a filter in the node, to notify when a new block arrives.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_newPendingTransactionFilter": {
        "post": {
          "summary": "Creates a filter in the node, to notify when new pending transactions arrive.",
          "operationId": "eth_newPendingTransactionFilter",
          "responses": {
            "200": {
              "description": "Filter Identifier",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Creates a filter in the node, to notify when new pending transactions arrive.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_uninstallFilter": {
        "post": {
          "summary": "Uninstalls a filter with given id.",
          "operationId": "eth_uninstallFilter",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded unsigned integer",
                  "type": "string",
                  "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Uninstalls a filter with given id.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Filter Identifier"
          }
        }
      },
      "/eth_getFilterChanges": {
        "post": {
          "summary": "Polling method for a filter, which returns an array of logs which occurred since last poll.",
          "operationId": "eth_getFilterChanges",
          "responses": {
            "200": {
              "description": "Log objects",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Filter results",
                    "oneOf": [
                      {
                        "title": "new block hashes",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "new transaction hashes",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "new logs",
                        "type": "array",
                        "items": {
                          "title": "log",
                          "type": "object",
                          "required": [
                            "transactionHash"
                          ],
                          "properties": {
                            "removed": {
                              "title": "removed",
                              "type": "boolean"
                            },
                            "logIndex": {
                              "title": "log index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionIndex": {
                              "title": "transaction index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionHash": {
                              "title": "transaction hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockHash": {
                              "title": "block hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockNumber": {
                              "title": "block number",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "address": {
                              "title": "address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "data": {
                              "title": "data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "topics": {
                              "title": "topics",
                              "type": "array",
                              "items": {
                                "title": "32 hex encoded bytes",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded unsigned integer",
                  "type": "string",
                  "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Polling method for a filter, which returns an array of logs which occurred since last poll.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Filter Identifier"
          }
        }
      },
      "/eth_getFilterLogs": {
        "post": {
          "summary": "Returns an array of all logs matching filter with given id.",
          "operationId": "eth_getFilterLogs",
          "responses": {
            "200": {
              "description": "Log objects",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Filter results",
                    "oneOf": [
                      {
                        "title": "new block hashes",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "new transaction hashes",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "new logs",
                        "type": "array",
                        "items": {
                          "title": "log",
                          "type": "object",
                          "required": [
                            "transactionHash"
                          ],
                          "properties": {
                            "removed": {
                              "title": "removed",
                              "type": "boolean"
                            },
                            "logIndex": {
                              "title": "log index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionIndex": {
                              "title": "transaction index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionHash": {
                              "title": "transaction hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockHash": {
                              "title": "block hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockNumber": {
                              "title": "block number",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "address": {
                              "title": "address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "data": {
                              "title": "data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "topics": {
                              "title": "topics",
                              "type": "array",
                              "items": {
                                "title": "32 hex encoded bytes",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded unsigned integer",
                  "type": "string",
                  "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns an array of all logs matching filter with given id.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Filter Identifier"
          }
        }
      },
      "/eth_getLogs": {
        "post": {
          "summary": "Returns an array of all logs matching filter with given id.",
          "operationId": "eth_getLogs",
          "responses": {
            "200": {
              "description": "Log objects",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Filter results",
                    "oneOf": [
                      {
                        "title": "new block hashes",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "new transaction hashes",
                        "type": "array",
                        "items": {
                          "title": "32 byte hex value",
                          "type": "string",
                          "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                        }
                      },
                      {
                        "title": "new logs",
                        "type": "array",
                        "items": {
                          "title": "log",
                          "type": "object",
                          "required": [
                            "transactionHash"
                          ],
                          "properties": {
                            "removed": {
                              "title": "removed",
                              "type": "boolean"
                            },
                            "logIndex": {
                              "title": "log index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionIndex": {
                              "title": "transaction index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionHash": {
                              "title": "transaction hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockHash": {
                              "title": "block hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockNumber": {
                              "title": "block number",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "address": {
                              "title": "address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "data": {
                              "title": "data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "topics": {
                              "title": "topics",
                              "type": "array",
                              "items": {
                                "title": "32 hex encoded bytes",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "fromBlock": {
                      "title": "from block",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "toBlock": {
                      "title": "to block",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    "address": {
                      "title": "Address(es)",
                      "oneOf": [
                        {
                          "title": "Address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        {
                          "title": "Addresses",
                          "type": "array",
                          "items": {
                            "title": "hex encoded address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          }
                        }
                      ]
                    },
                    "topics": {
                      "title": "Topics",
                      "type": "array",
                      "items": {
                        "title": "Filter Topic List Entry",
                        "oneOf": [
                          {
                            "title": "Single Topic Match",
                            "type": "string",
                            "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                          },
                          {
                            "title": "Multiple Topic Match",
                            "type": "array",
                            "items": {
                              "title": "32 hex encoded bytes",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns an array of all logs matching filter with given id.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Filter"
          }
        }
      },
      "/eth_mining": {
        "post": {
          "summary": "Returns whether the client is actively mining new blocks.",
          "operationId": "eth_mining",
          "responses": {
            "200": {
              "description": "Mining status",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "miningStatus",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns whether the client is actively mining new blocks.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_hashrate": {
        "post": {
          "summary": "Returns the number of hashes per second that the node is mining with.",
          "operationId": "eth_hashrate",
          "responses": {
            "200": {
              "description": "Mining status",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Hashrate",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of hashes per second that the node is mining with.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_getWork": {
        "post": {
          "summary": "Returns the hash of the current block, the seedHash, and the boundary condition to be met (“target”).",
          "operationId": "eth_getWork",
          "responses": {
            "200": {
              "description": "Current work",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": [
                      {
                        "title": "Proof-of-work hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      {
                        "title": "seed hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      {
                        "title": "difficulty",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      }
                    ]
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the hash of the current block, the seedHash, and the boundary condition to be met (“target”).",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": ""
          }
        }
      },
      "/eth_submitWork": {
        "post": {
          "summary": "Used for submitting a proof-of-work solution.",
          "operationId": "eth_submitWork",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "8 hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{16}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Used for submitting a proof-of-work solution.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "nonce"
          }
        }
      },
      "/eth_submitHashrate": {
        "post": {
          "summary": "Used for submitting mining hashrate.",
          "operationId": "eth_submitHashrate",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Used for submitting mining hashrate.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Hashrate"
          }
        }
      },
      "/eth_sign": {
        "post": {
          "summary": "Returns an EIP-191 signature over the provided data.",
          "operationId": "eth_sign",
          "responses": {
            "200": {
              "description": "Signature",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "65 hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{512}$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded address",
                  "type": "string",
                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns an EIP-191 signature over the provided data.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Address"
          }
        }
      },
      "/eth_signTransaction": {
        "post": {
          "summary": "Returns an RLP encoded transaction signed by the specified account.",
          "operationId": "eth_signTransaction",
          "responses": {
            "200": {
              "description": "Encoded transaction",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "Transaction object with sender",
                  "type": "object",
                  "required": [
                    "from"
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "EIP-1559 transaction.",
                      "required": [
                        "type",
                        "nonce",
                        "gas",
                        "value",
                        "input",
                        "maxFeePerGas",
                        "maxPriorityFeePerGas",
                        "chainId",
                        "accessList"
                      ],
                      "properties": {
                        "type": {
                          "title": "type",
                          "type": "string",
                          "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "to": {
                          "title": "to address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "gas": {
                          "title": "gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "value": {
                          "title": "value",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "input": {
                          "title": "input data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "maxPriorityFeePerGas": {
                          "title": "max priority fee per gas",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                        },
                        "maxFeePerGas": {
                          "title": "max fee per gas",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                        },
                        "accessList": {
                          "title": "accessList",
                          "type": "array",
                          "description": "EIP-2930 access list",
                          "items": {
                            "title": "Access list entry",
                            "type": "object",
                            "properties": {
                              "address": {
                                "title": "hex encoded address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "storageKeys": {
                                "type": "array",
                                "items": {
                                  "title": "32 byte hex value",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        },
                        "chainId": {
                          "title": "chainId",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Chain ID that this transaction is valid on."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "EIP-2930 transaction.",
                      "required": [
                        "type",
                        "nonce",
                        "gas",
                        "value",
                        "input",
                        "gasPrice",
                        "chainId",
                        "accessList"
                      ],
                      "properties": {
                        "type": {
                          "title": "type",
                          "type": "string",
                          "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "to": {
                          "title": "to address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "gas": {
                          "title": "gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "value": {
                          "title": "value",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "input": {
                          "title": "input data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "gasPrice": {
                          "title": "gas price",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The gas price willing to be paid by the sender in wei"
                        },
                        "accessList": {
                          "title": "accessList",
                          "type": "array",
                          "description": "EIP-2930 access list",
                          "items": {
                            "title": "Access list entry",
                            "type": "object",
                            "properties": {
                              "address": {
                                "title": "hex encoded address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "storageKeys": {
                                "type": "array",
                                "items": {
                                  "title": "32 byte hex value",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        },
                        "chainId": {
                          "title": "chainId",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Chain ID that this transaction is valid on."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "Legacy transaction.",
                      "required": [
                        "type",
                        "nonce",
                        "gas",
                        "value",
                        "input",
                        "gasPrice"
                      ],
                      "properties": {
                        "type": {
                          "title": "type",
                          "type": "string",
                          "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "to": {
                          "title": "to address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "gas": {
                          "title": "gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "value": {
                          "title": "value",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "input": {
                          "title": "input data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "gasPrice": {
                          "title": "gas price",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The gas price willing to be paid by the sender in wei"
                        },
                        "chainId": {
                          "title": "chainId",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Chain ID that this transaction is valid on."
                        }
                      }
                    }
                  ],
                  "properties": {
                    "from": {
                      "title": "from",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns an RLP encoded transaction signed by the specified account.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction"
          }
        }
      },
      "/eth_getBalance": {
        "post": {
          "summary": "Returns the balance of the account of given address.",
          "operationId": "eth_getBalance",
          "responses": {
            "200": {
              "description": "Balance",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded address",
                  "type": "string",
                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the balance of the account of given address.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Address"
          }
        }
      },
      "/eth_getStorageAt": {
        "post": {
          "summary": "Returns the value from a storage position at a given address.",
          "operationId": "eth_getStorageAt",
          "responses": {
            "200": {
              "description": "Value",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded address",
                  "type": "string",
                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the value from a storage position at a given address.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Address"
          }
        }
      },
      "/eth_getTransactionCount": {
        "post": {
          "summary": "Returns the number of transactions sent from an address.",
          "operationId": "eth_getTransactionCount",
          "responses": {
            "200": {
              "description": "Transaction count",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded address",
                  "type": "string",
                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the number of transactions sent from an address.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Address"
          }
        }
      },
      "/eth_getCode": {
        "post": {
          "summary": "Returns code at a given address.",
          "operationId": "eth_getCode",
          "responses": {
            "200": {
              "description": "Bytecode",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded address",
                  "type": "string",
                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns code at a given address.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Address"
          }
        }
      },
      "/eth_getProof": {
        "post": {
          "summary": "Returns the merkle proof for a given account and optionally some storage keys.",
          "operationId": "eth_getProof",
          "responses": {
            "200": {
              "description": "Account",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Account proof",
                    "type": "object",
                    "required": [
                      "address",
                      "accountProof",
                      "balance",
                      "codeHash",
                      "nonce",
                      "storageHash",
                      "storageProof"
                    ],
                    "properties": {
                      "address": {
                        "title": "address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "accountProof": {
                        "title": "accountProof",
                        "type": "array",
                        "items": {
                          "title": "hex encoded bytes",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        }
                      },
                      "balance": {
                        "title": "balance",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{0,64}$"
                      },
                      "codeHash": {
                        "title": "codeHash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "nonce": {
                        "title": "nonce",
                        "type": "string",
                        "pattern": "^0x([1-9a-f][0-9a-f]{0,31})|0$"
                      },
                      "storageHash": {
                        "title": "storageHash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "storageProof": {
                        "title": "storageProof",
                        "type": "array",
                        "items": {
                          "title": "Storage proof",
                          "type": "object",
                          "required": [
                            "key",
                            "value",
                            "proof"
                          ],
                          "properties": {
                            "key": {
                              "title": "key",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{0,64}$"
                            },
                            "proof": {
                              "title": "proof",
                              "type": "array",
                              "items": {
                                "title": "hex encoded bytes",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded address",
                  "type": "string",
                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the merkle proof for a given account and optionally some storage keys.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Address"
          }
        }
      },
      "/eth_sendTransaction": {
        "post": {
          "summary": "Signs and submits a transaction.",
          "operationId": "eth_sendTransaction",
          "responses": {
            "200": {
              "description": "Transaction hash",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "32 byte hex value",
                    "type": "string",
                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "Transaction object with sender",
                  "type": "object",
                  "required": [
                    "from"
                  ],
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "EIP-1559 transaction.",
                      "required": [
                        "type",
                        "nonce",
                        "gas",
                        "value",
                        "input",
                        "maxFeePerGas",
                        "maxPriorityFeePerGas",
                        "chainId",
                        "accessList"
                      ],
                      "properties": {
                        "type": {
                          "title": "type",
                          "type": "string",
                          "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "to": {
                          "title": "to address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "gas": {
                          "title": "gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "value": {
                          "title": "value",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "input": {
                          "title": "input data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "maxPriorityFeePerGas": {
                          "title": "max priority fee per gas",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                        },
                        "maxFeePerGas": {
                          "title": "max fee per gas",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                        },
                        "accessList": {
                          "title": "accessList",
                          "type": "array",
                          "description": "EIP-2930 access list",
                          "items": {
                            "title": "Access list entry",
                            "type": "object",
                            "properties": {
                              "address": {
                                "title": "hex encoded address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "storageKeys": {
                                "type": "array",
                                "items": {
                                  "title": "32 byte hex value",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        },
                        "chainId": {
                          "title": "chainId",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Chain ID that this transaction is valid on."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "EIP-2930 transaction.",
                      "required": [
                        "type",
                        "nonce",
                        "gas",
                        "value",
                        "input",
                        "gasPrice",
                        "chainId",
                        "accessList"
                      ],
                      "properties": {
                        "type": {
                          "title": "type",
                          "type": "string",
                          "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "to": {
                          "title": "to address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "gas": {
                          "title": "gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "value": {
                          "title": "value",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "input": {
                          "title": "input data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "gasPrice": {
                          "title": "gas price",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The gas price willing to be paid by the sender in wei"
                        },
                        "accessList": {
                          "title": "accessList",
                          "type": "array",
                          "description": "EIP-2930 access list",
                          "items": {
                            "title": "Access list entry",
                            "type": "object",
                            "properties": {
                              "address": {
                                "title": "hex encoded address",
                                "type": "string",
                                "pattern": "^0x[0-9,a-f,A-F]{40}$"
                              },
                              "storageKeys": {
                                "type": "array",
                                "items": {
                                  "title": "32 byte hex value",
                                  "type": "string",
                                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                }
                              }
                            }
                          }
                        },
                        "chainId": {
                          "title": "chainId",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Chain ID that this transaction is valid on."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "Legacy transaction.",
                      "required": [
                        "type",
                        "nonce",
                        "gas",
                        "value",
                        "input",
                        "gasPrice"
                      ],
                      "properties": {
                        "type": {
                          "title": "type",
                          "type": "string",
                          "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                        },
                        "nonce": {
                          "title": "nonce",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "to": {
                          "title": "to address",
                          "type": "string",
                          "pattern": "^0x[0-9,a-f,A-F]{40}$"
                        },
                        "gas": {
                          "title": "gas limit",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "value": {
                          "title": "value",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        },
                        "input": {
                          "title": "input data",
                          "type": "string",
                          "pattern": "^0x[0-9a-f]*$"
                        },
                        "gasPrice": {
                          "title": "gas price",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "The gas price willing to be paid by the sender in wei"
                        },
                        "chainId": {
                          "title": "chainId",
                          "type": "string",
                          "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                          "description": "Chain ID that this transaction is valid on."
                        }
                      }
                    }
                  ],
                  "properties": {
                    "from": {
                      "title": "from",
                      "type": "string",
                      "pattern": "^0x[0-9,a-f,A-F]{40}$"
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Signs and submits a transaction.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction"
          }
        }
      },
      "/eth_sendRawTransaction": {
        "post": {
          "summary": "Submits a raw transaction.",
          "operationId": "eth_sendRawTransaction",
          "responses": {
            "200": {
              "description": "Transaction hash",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "32 byte hex value",
                    "type": "string",
                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]*$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Submits a raw transaction.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction"
          }
        }
      },
      "/eth_getTransactionByHash": {
        "post": {
          "summary": "Returns the information about a transaction requested by transaction hash.",
          "operationId": "eth_getTransactionByHash",
          "responses": {
            "200": {
              "description": "Transaction information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Transaction information",
                    "required": [
                      "blockHash",
                      "blockNumber",
                      "from",
                      "hash",
                      "transactionIndex"
                    ],
                    "oneOf": [
                      {
                        "title": "Signed 1559 Transaction",
                        "type": "object",
                        "required": [
                          "accessList",
                          "chainId",
                          "gas",
                          "input",
                          "maxFeePerGas",
                          "maxPriorityFeePerGas",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "value",
                          "yParity"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "yParity": {
                            "title": "yParity",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Signed 2930 Transaction",
                        "type": "object",
                        "required": [
                          "accessList",
                          "chainId",
                          "gas",
                          "gasPrice",
                          "input",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "value",
                          "yParity"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "yParity": {
                            "title": "yParity",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Signed Legacy Transaction",
                        "type": "object",
                        "required": [
                          "gas",
                          "gasPrice",
                          "input",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "v",
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "v": {
                            "title": "v",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      }
                    ],
                    "properties": {
                      "blockHash": {
                        "title": "block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "blockNumber": {
                        "title": "block number",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "from": {
                        "title": "from address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "hash": {
                        "title": "transaction hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "transactionIndex": {
                        "title": "transaction index",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 byte hex value",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the information about a transaction requested by transaction hash.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction hash"
          }
        }
      },
      "/eth_getTransactionByBlockHashAndIndex": {
        "post": {
          "summary": "Returns information about a transaction by block hash and transaction index position.",
          "operationId": "eth_getTransactionByBlockHashAndIndex",
          "responses": {
            "200": {
              "description": "Transaction information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Transaction information",
                    "required": [
                      "blockHash",
                      "blockNumber",
                      "from",
                      "hash",
                      "transactionIndex"
                    ],
                    "oneOf": [
                      {
                        "title": "Signed 1559 Transaction",
                        "type": "object",
                        "required": [
                          "accessList",
                          "chainId",
                          "gas",
                          "input",
                          "maxFeePerGas",
                          "maxPriorityFeePerGas",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "value",
                          "yParity"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "yParity": {
                            "title": "yParity",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Signed 2930 Transaction",
                        "type": "object",
                        "required": [
                          "accessList",
                          "chainId",
                          "gas",
                          "gasPrice",
                          "input",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "value",
                          "yParity"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "yParity": {
                            "title": "yParity",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Signed Legacy Transaction",
                        "type": "object",
                        "required": [
                          "gas",
                          "gasPrice",
                          "input",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "v",
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "v": {
                            "title": "v",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      }
                    ],
                    "properties": {
                      "blockHash": {
                        "title": "block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "blockNumber": {
                        "title": "block number",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "from": {
                        "title": "from address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "hash": {
                        "title": "transaction hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "transactionIndex": {
                        "title": "transaction index",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 byte hex value",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns information about a transaction by block hash and transaction index position.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block hash"
          }
        }
      },
      "/eth_getTransactionByBlockNumberAndIndex": {
        "post": {
          "summary": "Returns information about a transaction by block number and transaction index position.",
          "operationId": "eth_getTransactionByBlockNumberAndIndex",
          "responses": {
            "200": {
              "description": "Transaction information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Transaction information",
                    "required": [
                      "blockHash",
                      "blockNumber",
                      "from",
                      "hash",
                      "transactionIndex"
                    ],
                    "oneOf": [
                      {
                        "title": "Signed 1559 Transaction",
                        "type": "object",
                        "required": [
                          "accessList",
                          "chainId",
                          "gas",
                          "input",
                          "maxFeePerGas",
                          "maxPriorityFeePerGas",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "value",
                          "yParity"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "yParity": {
                            "title": "yParity",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Signed 2930 Transaction",
                        "type": "object",
                        "required": [
                          "accessList",
                          "chainId",
                          "gas",
                          "gasPrice",
                          "input",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "value",
                          "yParity"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "description": "EIP-2930 access list",
                            "items": {
                              "title": "Access list entry",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "title": "hex encoded address",
                                  "type": "string",
                                  "pattern": "^0x[0-9,a-f,A-F]{40}$"
                                },
                                "storageKeys": {
                                  "type": "array",
                                  "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                                  }
                                }
                              }
                            }
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "yParity": {
                            "title": "yParity",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      },
                      {
                        "title": "Signed Legacy Transaction",
                        "type": "object",
                        "required": [
                          "gas",
                          "gasPrice",
                          "input",
                          "nonce",
                          "r",
                          "s",
                          "type",
                          "v",
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "title": "type",
                            "type": "string",
                            "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
                          },
                          "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "to": {
                            "title": "to address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          },
                          "gas": {
                            "title": "gas limit",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "value": {
                            "title": "value",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "input": {
                            "title": "input data",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "gasPrice": {
                            "title": "gas price",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "The gas price willing to be paid by the sender in wei"
                          },
                          "chainId": {
                            "title": "chainId",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Chain ID that this transaction is valid on."
                          },
                          "v": {
                            "title": "v",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "r": {
                            "title": "r",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "s": {
                            "title": "s",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          }
                        }
                      }
                    ],
                    "properties": {
                      "blockHash": {
                        "title": "block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "blockNumber": {
                        "title": "block number",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "from": {
                        "title": "from address",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "hash": {
                        "title": "transaction hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "transactionIndex": {
                        "title": "transaction index",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "Block number or tag",
                  "oneOf": [
                    {
                      "title": "Block number",
                      "type": "string",
                      "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    },
                    {
                      "title": "Block tag",
                      "type": "string",
                      "enum": [
                        "earliest",
                        "finalized",
                        "safe",
                        "latest",
                        "pending"
                      ],
                      "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                    }
                  ]
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns information about a transaction by block number and transaction index position.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Block"
          }
        }
      },
      "/eth_getTransactionReceipt": {
        "post": {
          "summary": "Returns the receipt of a transaction by transaction hash.",
          "operationId": "eth_getTransactionReceipt",
          "responses": {
            "200": {
              "description": "Receipt Information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Receipt info",
                    "required": [
                      "blockHash",
                      "blockNumber",
                      "from",
                      "cumulativeGasUsed",
                      "gasUsed",
                      "logs",
                      "logsBloom",
                      "transactionHash",
                      "transactionIndex",
                      "effectiveGasPrice"
                    ],
                    "properties": {
                      "transactionHash": {
                        "title": "transaction hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "transactionIndex": {
                        "title": "transaction index",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "blockHash": {
                        "title": "block hash",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                      },
                      "blockNumber": {
                        "title": "block number",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "from": {
                        "title": "from",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$"
                      },
                      "to": {
                        "title": "to",
                        "type": "string",
                        "pattern": "^0x[0-9,a-f,A-F]{40}$",
                        "description": "Address of the receiver or null in a contract creation transaction."
                      },
                      "cumulativeGasUsed": {
                        "title": "cumulative gas used",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                        "description": "The sum of gas used by this transaction and all preceding transactions in the same block."
                      },
                      "gasUsed": {
                        "title": "gas used",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                        "description": "The amount of gas used for this specific transaction alone."
                      },
                      "contractAddress": {
                        "title": "contract address",
                        "description": "The contract address created, if the transaction was a contract creation, otherwise null.",
                        "oneOf": [
                          {
                            "title": "hex encoded address",
                            "type": "string",
                            "pattern": "^0x[0-9,a-f,A-F]{40}$"
                          }
                        ]
                      },
                      "logs": {
                        "title": "logs",
                        "type": "array",
                        "items": {
                          "title": "log",
                          "type": "object",
                          "required": [
                            "transactionHash"
                          ],
                          "properties": {
                            "removed": {
                              "title": "removed",
                              "type": "boolean"
                            },
                            "logIndex": {
                              "title": "log index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionIndex": {
                              "title": "transaction index",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "transactionHash": {
                              "title": "transaction hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockHash": {
                              "title": "block hash",
                              "type": "string",
                              "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                            },
                            "blockNumber": {
                              "title": "block number",
                              "type": "string",
                              "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "address": {
                              "title": "address",
                              "type": "string",
                              "pattern": "^0x[0-9,a-f,A-F]{40}$"
                            },
                            "data": {
                              "title": "data",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]*$"
                            },
                            "topics": {
                              "title": "topics",
                              "type": "array",
                              "items": {
                                "title": "32 hex encoded bytes",
                                "type": "string",
                                "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                              }
                            }
                          }
                        }
                      },
                      "logsBloom": {
                        "title": "logs bloom",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{512}$"
                      },
                      "root": {
                        "title": "state root",
                        "type": "string",
                        "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$",
                        "description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
                      },
                      "status": {
                        "title": "status",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                        "description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
                      },
                      "effectiveGasPrice": {
                        "title": "effective gas price",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                        "description": "The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
                      }
                    }
                  }
                }
              }
            }
          },
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "title": "32 byte hex value",
                  "type": "string",
                  "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
                },
                "example": {
                  "jsonrpc": "2.0",
                  "method": "Returns the receipt of a transaction by transaction hash.",
                  "params": [],
                  "id": 1
                }
              }
            },
            "description": "Transaction hash"
          }
        }
      }
    }
  }