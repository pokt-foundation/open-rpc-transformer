{"openapi": "3.0.0", "info": {"title": "Ethereum JSON-RPC Specification", "description": "A specification of the standard interface for Ethereum clients.", "license": {"name": "CC0-1.0", "url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"}, "version": "0.0.0"}, "components": {}, "paths": {"/eth_getBlockByHash": {"post": {"operationId": "eth_getBlockByHash", "responses": {"200": {"description": "Block information", "content": {"application/json": {"schema": {"title": "Block object", "type": "object", "required": ["parentHash", "sha3Uncles", "miner", "stateRoot", "transactionsRoot", "receiptsRoot", "logsBloom", "number", "gasLimit", "gasUsed", "timestamp", "extraData", "mixHash", "nonce", "size", "transactions", "uncles"], "properties": {"parentHash": {"title": "Parent block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "sha3Uncles": {"title": "Ommers hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "miner": {"title": "Coinbase", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "stateRoot": {"title": "State root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "transactionsRoot": {"title": "Transactions root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "receiptsRoot": {"title": "Receipts root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "logsBloom": {"title": "Bloom filter", "type": "string", "pattern": "^0x[0-9a-f]{512}$"}, "difficulty": {"title": "Difficulty", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "number": {"title": "Number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "gasLimit": {"title": "Gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "gasUsed": {"title": "Gas used", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "timestamp": {"title": "Timestamp", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "extraData": {"title": "Extra data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "mixHash": {"title": "Mix hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "nonce": {"title": "Nonce", "type": "string", "pattern": "^0x[0-9a-f]{16}$"}, "totalDifficulty": {"title": "Total difficult", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "baseFeePerGas": {"title": "Base fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "size": {"title": "Block size", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactions": {"anyOf": [{"title": "Transaction hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "Full transactions", "type": "array", "items": {"oneOf": [{"title": "Signed 1559 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "input", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed 2930 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "gasPrice", "input", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed Legacy Transaction", "type": "object", "required": ["gas", "gasPrice", "input", "nonce", "r", "s", "type", "v", "value"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "v": {"title": "v", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}]}}]}, "uncles": {"title": "Uncles", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block hash", "required": true, "schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"name": "Hydrated transactions", "required": true, "schema": {"title": "hydrated", "type": "boolean"}}]}}}}}, "/eth_getBlockByNumber": {"post": {"operationId": "eth_getBlockByNumber", "responses": {"200": {"description": "Block information", "content": {"application/json": {"schema": {"title": "Block object", "type": "object", "required": ["parentHash", "sha3Uncles", "miner", "stateRoot", "transactionsRoot", "receiptsRoot", "logsBloom", "number", "gasLimit", "gasUsed", "timestamp", "extraData", "mixHash", "nonce", "size", "transactions", "uncles"], "properties": {"parentHash": {"title": "Parent block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "sha3Uncles": {"title": "Ommers hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "miner": {"title": "Coinbase", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "stateRoot": {"title": "State root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "transactionsRoot": {"title": "Transactions root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "receiptsRoot": {"title": "Receipts root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "logsBloom": {"title": "Bloom filter", "type": "string", "pattern": "^0x[0-9a-f]{512}$"}, "difficulty": {"title": "Difficulty", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "number": {"title": "Number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "gasLimit": {"title": "Gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "gasUsed": {"title": "Gas used", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "timestamp": {"title": "Timestamp", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "extraData": {"title": "Extra data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "mixHash": {"title": "Mix hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "nonce": {"title": "Nonce", "type": "string", "pattern": "^0x[0-9a-f]{16}$"}, "totalDifficulty": {"title": "Total difficult", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "baseFeePerGas": {"title": "Base fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "size": {"title": "Block size", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactions": {"anyOf": [{"title": "Transaction hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "Full transactions", "type": "array", "items": {"oneOf": [{"title": "Signed 1559 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "input", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed 2930 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "gasPrice", "input", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed Legacy Transaction", "type": "object", "required": ["gas", "gasPrice", "input", "nonce", "r", "s", "type", "v", "value"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "v": {"title": "v", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}]}}]}, "uncles": {"title": "Uncles", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block", "required": true, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}, {"name": "Hydrated transactions", "required": true, "schema": {"title": "hydrated", "type": "boolean"}}]}}}}}, "/eth_getBlockTransactionCountByHash": {"post": {"operationId": "eth_getBlockTransactionCountByHash", "responses": {"200": {"description": "Transaction count", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block hash", "schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}, "/eth_getBlockTransactionCountByNumber": {"post": {"operationId": "eth_getBlockTransactionCountByNumber", "responses": {"200": {"description": "Transaction count", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block", "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_getUncleCountByBlockHash": {"post": {"operationId": "eth_getUncleCountByBlockHash", "responses": {"200": {"description": "Uncle count", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block hash", "schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}, "/eth_getUncleCountByBlockNumber": {"post": {"operationId": "eth_getUncleCountByBlockNumber", "responses": {"200": {"description": "Uncle count", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block", "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_chainId": {"post": {"operationId": "eth_chainId", "responses": {"200": {"description": "Chain ID", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_syncing": {"post": {"operationId": "eth_syncing", "responses": {"200": {"description": "Syncing status", "content": {"application/json": {"schema": {"title": "Syncing status", "oneOf": [{"title": "Syncing progress", "type": "object", "properties": {"startingBlock": {"title": "Starting block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "currentBlock": {"title": "Current block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "highestBlock": {"title": "Highest block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Not syncing", "description": "Should always return false if not syncing.", "type": "boolean"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_coinbase": {"post": {"operationId": "eth_coinbase", "responses": {"200": {"description": "Coinbase address", "content": {"application/json": {"schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_accounts": {"post": {"operationId": "eth_accounts", "responses": {"200": {"description": "Accounts", "content": {"application/json": {"schema": {"title": "Accounts", "type": "array", "items": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_blockNumber": {"post": {"operationId": "eth_blockNumber", "responses": {"200": {"description": "Block number", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_call": {"post": {"operationId": "eth_call", "responses": {"200": {"description": "Return data", "content": {"application/json": {"schema": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction", "required": true, "schema": {"type": "object", "title": "Transaction object generic to all types", "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_estimateGas": {"post": {"operationId": "eth_estimateGas", "responses": {"200": {"description": "Gas used", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction", "required": true, "schema": {"type": "object", "title": "Transaction object generic to all types", "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_createAccessList": {"post": {"operationId": "eth_createAccessList", "responses": {"200": {"description": "Gas used", "content": {"application/json": {"schema": {"title": "Access list result", "type": "object", "properties": {"accessList": {"title": "accessList", "type": "array", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "error": {"title": "error", "type": "string"}, "gasUsed": {"title": "Gas used", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction", "required": true, "schema": {"type": "object", "title": "Transaction object generic to all types", "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_gasPrice": {"post": {"operationId": "eth_gasPrice", "responses": {"200": {"description": "Gas price", "content": {"application/json": {"schema": {"title": "Gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_maxPriorityFeePerGas": {"post": {"operationId": "eth_maxPriorityFeePerGas", "responses": {"200": {"description": "Max priority fee per gas", "content": {"application/json": {"schema": {"title": "Max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_feeHistory": {"post": {"operationId": "eth_feeHistory", "responses": {"200": {"description": "feeHistoryResult", "content": {"application/json": {"schema": {"title": "feeHistoryResults", "description": "Fee history results.", "type": "object", "required": ["oldestBlock", "baseFeePerGas", "gasUsedRatio"], "properties": {"oldestBlock": {"title": "oldestBlock", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Lowest number block of returned range."}, "baseFeePerGas": {"title": "baseFeePerGasArray", "description": "An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.", "type": "array", "items": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}, "reward": {"title": "rewardArray", "description": "A two-dimensional array of effective priority fees per gas at the requested block percentiles.", "type": "array", "items": {"title": "rewardPercentile", "description": "An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.", "type": "array", "items": {"title": "rewardPercentile", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty."}}}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "blockCount", "description": "Requested range of blocks. Clients will return less than the requested range if not all blocks are available.", "required": true, "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}, {"name": "newestBlock", "description": "Highest block of the requested range.", "required": true, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}, {"name": "rewardPercentiles", "description": "A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.", "required": true, "schema": {"title": "rewardPercentiles", "type": "array", "items": {"title": "rewardPercentile", "description": "Floating point value between 0 and 100.", "type": "number"}}}]}}}}}, "/eth_newFilter": {"post": {"operationId": "eth_newFilter", "responses": {"200": {"description": "Filter Identifier", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Filter", "schema": {"title": "filter", "type": "object", "properties": {"fromBlock": {"title": "from block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "toBlock": {"title": "to block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "address": {"title": "Address(es)", "oneOf": [{"title": "Address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, {"title": "Addresses", "type": "array", "items": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}]}, "topics": {"title": "Topics", "type": "array", "items": {"title": "Filter Topic List Entry", "oneOf": [{"title": "Any Topic Match", "type": "null"}, {"title": "Single Topic Match", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, {"title": "Multiple Topic Match", "type": "array", "items": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}]}}}}}, "/eth_newBlockFilter": {"post": {"operationId": "eth_newBlockFilter", "responses": {"200": {"description": "Filter Identifier", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_newPendingTransactionFilter": {"post": {"operationId": "eth_newPendingTransactionFilter", "responses": {"200": {"description": "Filter Identifier", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_uninstallFilter": {"post": {"operationId": "eth_uninstallFilter", "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "boolean"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Filter Identifier", "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}]}}}}}, "/eth_getFilterChanges": {"post": {"operationId": "eth_getFilterChanges", "responses": {"200": {"description": "Log objects", "content": {"application/json": {"schema": {"title": "Filter results", "oneOf": [{"title": "new block hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "new transaction hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "new logs", "type": "array", "items": {"title": "log", "type": "object", "required": ["transactionHash"], "properties": {"removed": {"title": "removed", "type": "boolean"}, "logIndex": {"title": "log index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionHash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "address": {"title": "address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "data": {"title": "data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "topics": {"title": "topics", "type": "array", "items": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}]}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Filter Identifier", "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}]}}}}}, "/eth_getFilterLogs": {"post": {"operationId": "eth_getFilterLogs", "responses": {"200": {"description": "Log objects", "content": {"application/json": {"schema": {"title": "Filter results", "oneOf": [{"title": "new block hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "new transaction hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "new logs", "type": "array", "items": {"title": "log", "type": "object", "required": ["transactionHash"], "properties": {"removed": {"title": "removed", "type": "boolean"}, "logIndex": {"title": "log index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionHash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "address": {"title": "address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "data": {"title": "data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "topics": {"title": "topics", "type": "array", "items": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}]}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Filter Identifier", "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}]}}}}}, "/eth_getLogs": {"post": {"operationId": "eth_getLogs", "responses": {"200": {"description": "Log objects", "content": {"application/json": {"schema": {"title": "Filter results", "oneOf": [{"title": "new block hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "new transaction hashes", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"title": "new logs", "type": "array", "items": {"title": "log", "type": "object", "required": ["transactionHash"], "properties": {"removed": {"title": "removed", "type": "boolean"}, "logIndex": {"title": "log index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionHash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "address": {"title": "address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "data": {"title": "data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "topics": {"title": "topics", "type": "array", "items": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}]}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Filter", "schema": {"title": "filter", "type": "object", "properties": {"fromBlock": {"title": "from block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "toBlock": {"title": "to block", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "address": {"title": "Address(es)", "oneOf": [{"title": "Address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, {"title": "Addresses", "type": "array", "items": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}]}, "topics": {"title": "Topics", "type": "array", "items": {"title": "Filter Topic List Entry", "oneOf": [{"title": "Any Topic Match", "type": "null"}, {"title": "Single Topic Match", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, {"title": "Multiple Topic Match", "type": "array", "items": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}]}}}}}, "/eth_mining": {"post": {"operationId": "eth_mining", "responses": {"200": {"description": "Mining status", "content": {"application/json": {"schema": {"title": "miningStatus", "type": "boolean"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_hashrate": {"post": {"operationId": "eth_hashrate", "responses": {"200": {"description": "Mining status", "content": {"application/json": {"schema": {"title": "Hashrate", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_getWork": {"post": {"operationId": "eth_getWork", "responses": {"200": {"description": "Current work", "content": {"application/json": {"schema": {"type": "array", "items": [{"title": "Proof-of-work hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, {"title": "seed hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, {"title": "difficulty", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}]}}}}}, "requestBody": {"content": {"application/json": {"schema": []}}}}}, "/eth_submitWork": {"post": {"operationId": "eth_submitWork", "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "boolean"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "nonce", "required": true, "schema": {"title": "8 hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]{16}$"}}, {"name": "hash", "required": true, "schema": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"name": "digest", "required": true, "schema": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}, "/eth_submitHashrate": {"post": {"operationId": "eth_submitHashrate", "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "boolean"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Hashrate", "required": true, "schema": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"name": "ID", "required": true, "schema": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}, "/eth_sign": {"post": {"operationId": "eth_sign", "responses": {"200": {"description": "Signature", "content": {"application/json": {"schema": {"title": "65 hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]{512}$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Address", "required": true, "schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}, {"name": "Message", "required": true, "schema": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}]}}}}}, "/eth_signTransaction": {"post": {"operationId": "eth_signTransaction", "responses": {"200": {"description": "Encoded transaction", "content": {"application/json": {"schema": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction", "required": true, "schema": {"title": "Transaction object with sender", "type": "object", "required": ["from"], "oneOf": [{"type": "object", "title": "EIP-1559 transaction.", "required": ["type", "nonce", "gas", "value", "input", "maxFeePerGas", "maxPriorityFeePerGas", "chainId", "accessList"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}, {"type": "object", "title": "EIP-2930 transaction.", "required": ["type", "nonce", "gas", "value", "input", "gasPrice", "chainId", "accessList"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}, {"type": "object", "title": "Legacy transaction.", "required": ["type", "nonce", "gas", "value", "input", "gasPrice"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}], "properties": {"from": {"title": "from", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}}}]}}}}}, "/eth_getBalance": {"post": {"operationId": "eth_getBalance", "responses": {"200": {"description": "Balance", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Address", "required": true, "schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_getStorageAt": {"post": {"operationId": "eth_getStorageAt", "responses": {"200": {"description": "Value", "content": {"application/json": {"schema": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Address", "required": true, "schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}, {"name": "Storage slot", "required": true, "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x[0-9a-f]{0,64}$"}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_getTransactionCount": {"post": {"operationId": "eth_getTransactionCount", "responses": {"200": {"description": "Transaction count", "content": {"application/json": {"schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Address", "required": true, "schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_getCode": {"post": {"operationId": "eth_getCode", "responses": {"200": {"description": "Bytecode", "content": {"application/json": {"schema": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Address", "required": true, "schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}, {"name": "Block", "required": false, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_getProof": {"post": {"operationId": "eth_getProof", "responses": {"200": {"description": "Account", "content": {"application/json": {"schema": {"title": "Account proof", "type": "object", "required": ["address", "accountProof", "balance", "codeHash", "nonce", "storageHash", "storageProof"], "properties": {"address": {"title": "address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "accountProof": {"title": "accountProof", "type": "array", "items": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}, "balance": {"title": "balance", "type": "string", "pattern": "^0x[0-9a-f]{0,64}$"}, "codeHash": {"title": "codeHash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f][0-9a-f]{0,31})|0$"}, "storageHash": {"title": "storageHash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "storageProof": {"title": "storageProof", "type": "array", "items": {"title": "Storage proof", "type": "object", "required": ["key", "value", "proof"], "properties": {"key": {"title": "key", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "value": {"title": "value", "type": "string", "pattern": "^0x[0-9a-f]{0,64}$"}, "proof": {"title": "proof", "type": "array", "items": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}}}}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Address", "required": true, "schema": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}, {"name": "StorageKeys", "required": true, "schema": {"title": "Storage keys", "type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}, {"name": "Block", "required": true, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}]}}}}}, "/eth_sendTransaction": {"post": {"operationId": "eth_sendTransaction", "responses": {"200": {"description": "Transaction hash", "content": {"application/json": {"schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction", "required": true, "schema": {"title": "Transaction object with sender", "type": "object", "required": ["from"], "oneOf": [{"type": "object", "title": "EIP-1559 transaction.", "required": ["type", "nonce", "gas", "value", "input", "maxFeePerGas", "maxPriorityFeePerGas", "chainId", "accessList"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}, {"type": "object", "title": "EIP-2930 transaction.", "required": ["type", "nonce", "gas", "value", "input", "gasPrice", "chainId", "accessList"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}, {"type": "object", "title": "Legacy transaction.", "required": ["type", "nonce", "gas", "value", "input", "gasPrice"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}}}], "properties": {"from": {"title": "from", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}}}}]}}}}}, "/eth_sendRawTransaction": {"post": {"operationId": "eth_sendRawTransaction", "responses": {"200": {"description": "Transaction hash", "content": {"application/json": {"schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction", "required": true, "schema": {"title": "hex encoded bytes", "type": "string", "pattern": "^0x[0-9a-f]*$"}}]}}}}}, "/eth_getTransactionByHash": {"post": {"operationId": "eth_getTransactionByHash", "responses": {"200": {"description": "Transaction information", "content": {"application/json": {"schema": {"type": "object", "title": "Transaction information", "required": ["blockHash", "blockNumber", "from", "hash", "transactionIndex"], "oneOf": [{"title": "Signed 1559 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "input", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed 2930 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "gasPrice", "input", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed Legacy Transaction", "type": "object", "required": ["gas", "gasPrice", "input", "nonce", "r", "s", "type", "v", "value"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "v": {"title": "v", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}], "properties": {"blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "from": {"title": "from address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "hash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction hash", "required": true, "schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}, "/eth_getTransactionByBlockHashAndIndex": {"post": {"operationId": "eth_getTransactionByBlockHashAndIndex", "responses": {"200": {"description": "Transaction information", "content": {"application/json": {"schema": {"type": "object", "title": "Transaction information", "required": ["blockHash", "blockNumber", "from", "hash", "transactionIndex"], "oneOf": [{"title": "Signed 1559 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "input", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed 2930 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "gasPrice", "input", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed Legacy Transaction", "type": "object", "required": ["gas", "gasPrice", "input", "nonce", "r", "s", "type", "v", "value"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "v": {"title": "v", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}], "properties": {"blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "from": {"title": "from address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "hash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block hash", "required": true, "schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}, {"name": "Transaction index", "required": true, "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}]}}}}}, "/eth_getTransactionByBlockNumberAndIndex": {"post": {"operationId": "eth_getTransactionByBlockNumberAndIndex", "responses": {"200": {"description": "Transaction information", "content": {"application/json": {"schema": {"type": "object", "title": "Transaction information", "required": ["blockHash", "blockNumber", "from", "hash", "transactionIndex"], "oneOf": [{"title": "Signed 1559 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "input", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "maxPriorityFeePerGas": {"title": "max priority fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Maximum fee per gas the sender is willing to pay to miners in wei"}, "maxFeePerGas": {"title": "max fee per gas", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed 2930 Transaction", "type": "object", "required": ["accessList", "chainId", "gas", "gasPrice", "input", "nonce", "r", "s", "type", "value", "yParity"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "accessList": {"title": "accessList", "type": "array", "description": "EIP-2930 access list", "items": {"title": "Access list entry", "type": "object", "properties": {"address": {"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "storageKeys": {"type": "array", "items": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "yParity": {"title": "yParity", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}, {"title": "Signed Legacy Transaction", "type": "object", "required": ["gas", "gasPrice", "input", "nonce", "r", "s", "type", "v", "value"], "properties": {"type": {"title": "type", "type": "string", "pattern": "^0x([0-9,a-f,A-F]?){1,2}$"}, "nonce": {"title": "nonce", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "to": {"title": "to address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "gas": {"title": "gas limit", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "value": {"title": "value", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "input": {"title": "input data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "gasPrice": {"title": "gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The gas price willing to be paid by the sender in wei"}, "chainId": {"title": "chainId", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Chain ID that this transaction is valid on."}, "v": {"title": "v", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "r": {"title": "r", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "s": {"title": "s", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}], "properties": {"blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "from": {"title": "from address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "hash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Block", "required": true, "schema": {"title": "Block number or tag", "oneOf": [{"title": "Block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, {"title": "Block tag", "type": "string", "enum": ["earliest", "finalized", "safe", "latest", "pending"], "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"}]}}, {"name": "Transaction index", "required": true, "schema": {"title": "hex encoded unsigned integer", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}}]}}}}}, "/eth_getTransactionReceipt": {"post": {"operationId": "eth_getTransactionReceipt", "responses": {"200": {"description": "Receipt Information", "content": {"application/json": {"schema": {"type": "object", "title": "Receipt info", "required": ["blockHash", "blockNumber", "from", "cumulativeGasUsed", "gasUsed", "logs", "logsBloom", "transactionHash", "transactionIndex", "effectiveGasPrice"], "properties": {"transactionHash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "from": {"title": "from", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "to": {"title": "to", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$", "description": "Address of the receiver or null in a contract creation transaction."}, "cumulativeGasUsed": {"title": "cumulative gas used", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The sum of gas used by this transaction and all preceding transactions in the same block."}, "gasUsed": {"title": "gas used", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The amount of gas used for this specific transaction alone."}, "contractAddress": {"title": "contract address", "description": "The contract address created, if the transaction was a contract creation, otherwise null.", "oneOf": [{"title": "hex encoded address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, {"name": null, "type": "null"}]}, "logs": {"title": "logs", "type": "array", "items": {"title": "log", "type": "object", "required": ["transactionHash"], "properties": {"removed": {"title": "removed", "type": "boolean"}, "logIndex": {"title": "log index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionIndex": {"title": "transaction index", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "transactionHash": {"title": "transaction hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockHash": {"title": "block hash", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}, "blockNumber": {"title": "block number", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"}, "address": {"title": "address", "type": "string", "pattern": "^0x[0-9,a-f,A-F]{40}$"}, "data": {"title": "data", "type": "string", "pattern": "^0x[0-9a-f]*$"}, "topics": {"title": "topics", "type": "array", "items": {"title": "32 hex encoded bytes", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}}}}, "logsBloom": {"title": "logs bloom", "type": "string", "pattern": "^0x[0-9a-f]{512}$"}, "root": {"title": "state root", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$", "description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."}, "status": {"title": "status", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."}, "effectiveGasPrice": {"title": "effective gas price", "type": "string", "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$", "description": "The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."}}}}}}}, "requestBody": {"content": {"application/json": {"schema": [{"name": "Transaction hash", "schema": {"title": "32 byte hex value", "type": "string", "pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"}}]}}}}}}}